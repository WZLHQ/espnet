encoder: whisper
encoder_conf:
    whisper_model: large
    dropout_rate: 0.0
    # do_pad_trim: true         # should be set when doing zero-shot inference

decoder: whisper
decoder_conf:
    whisper_model: large
    dropout_rate: 0.0

model_conf:
    ctc_weight: 0.0
    lsm_weight: 0.1
    length_normalized_loss: false
    extract_feats_in_collect_stats: false
    sym_sos: "<|startoftranscript|>"
    sym_eos: "<|endoftext|>"

# model selection
best_model_criterion:
-  - valid
   - acc
   - max
keep_nbest_models: 3

early_stopping_criterion: ["valid", "acc", "max"]

# plot related
use_matplotlib: true
num_att_plot: 0

# dataloader
num_workers: 4

# random seed
seed: 2022

# others
init: none
input_size: 1
normalize: null
frontend: null
use_amp: true
cudnn_deterministic: false
cudnn_benchmark: false
accum_grad: 1
patience: 3
log_interval: 50
init_param: []
ignore_init_mismatch: true

# -------------hyper-paramters below might should be specified depend on specific corpus-----------------#

# minibatch related
batch_type: folded
batch_size: 16
valid_batch_type: folded
valid_batch_size: 16 # large valid_batch_bins lead to large GPU memory, we can set it the half of batch_bins (training)

# optimization
max_epoch: 10
optim: adamw
optim_conf:
    lr: 5.0e-04
    weight_decay: 0.01
    betas:
    - 0.9
    - 0.99
    eps: 1.0e-06
scheduler: warmuplr
scheduler_conf:
    warmup_steps: 1500

# LoRA finetune related
use_adapter: true
adapter: lora
save_strategy: required_grad_only
adapter_conf:
    rank: 4
    alpha: 4
    dropout_rate: 0.05
    target_modules: ["query", "key", "value", "attn.out", "mlp.0", "mlp.2"]
